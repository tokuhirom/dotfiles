#!/usr/bin/env perl
use strict;
use warnings;
use autodie;
use v5.10.0;
use Time::Piece;
use Time::HiRes qw/gettimeofday/;
use Pod::Usage;
use POSIX;

&main; exit;

sub show($) {
    my $time = shift;
    printf "%s %s\n", $time->strftime("%Y-%m-%d %H:%M:%S%z"), $time->epoch;
}

sub main {
    my $stuff = join " ", @ARGV;
    if (@ARGV == 0) {
        show(localtime());
        say(join(q//, gettimeofday()) =~ s/...$//r);
    } elsif ($stuff =~ /^\d{4}-\d\d$/) {
        my $first = localtime()->strptime($stuff, '%Y-%m');
        my $last = localtime()->strptime($stuff . '-' . $first->month_last_day . ' 23:59:59', '%Y-%m-%d %H:%M:%S');
        show($first);
        show($last);
    } elsif ($stuff =~ /^\d{4}-\d\d-\d\d$/) {
        show(localtime()->strptime($stuff . ' 00:00:00', '%Y-%m-%d %H:%M:%S'));
        show(localtime()->strptime($stuff . ' 23:59:59', '%Y-%m-%d %H:%M:%S'));
    } elsif ($stuff =~ /^\d{4}-\d\d-\d\d \d\d:\d\d:\d\d$/) {
        show(localtime()->strptime($stuff, '%Y-%m-%d %H:%M:%S'));
    } elsif ($stuff =~ m{^\d\d/[A-Za-z]+/\d\d\d\d:\d\d:\d\d:\d\d$}) {
        # 26/Feb/2019:15:36:20
        show(localtime()->strptime($stuff, '%d/%b/%Y:%H:%M:%S'));
    } elsif ($stuff =~ /^\d{13}$/) {
        show(localtime($stuff/1000));
    } elsif ($stuff =~ /^\d+$/) {
        if ($stuff > 1586127053) {
            say "$stuff is maybe epoch millis.";
            show(Time::Piece::localtime($stuff/1000.0));
        } else {
            say "$stuff is maybe epoch seconds.";
            show(Time::Piece::localtime($stuff));
        }
    } else {
        pod2usage(1);
    }
}


__END__

=head1 SYNOPSIS

    % epoch 2013-05
    % epoch

